 ssh scambilight@scambilight.local
libcamera-vid -t 0 --width 1920 --height 1080 --framerate 30 --codec h264 --inline -o - | ffmpeg -i pipe:0 -an -c:v copy -f mpegs -f mpegts udp://LiellOMEN.local:1234
libcamera-vid -t 0 --width 640 --height 480 --framerate 30 --codec h264 --inline -o - | ffmpeg -i pipe:0 -an -c:v copy -f mpegs -f mpegts udp://LiellOMEN.local:1234


# raspberry pi with real fisheye lens cam
libcamera-vid -t 0 --width 1296 --height 972 --framerate 30 --codec h264 --inline -o - | ffmpeg -i pipe:0 -an -c:v copy -f mpegs -f mpegts udp://LiellOMEN.local:1234

libcamera-vid -t 0 --width 1296 --height 972 --framerate 30 -fflags nobuffer -flags low_delay -strict experimental --codec h264 --inline -o - | ffmpeg -i pipe:0 -an -c:v copy -f mpegs -f mpegts udp://LiellOMEN.local:1234

playback
ffplay -fflags nobuffer -flags low_delay -framedrop -strict experimental -probesize 32 udp://127.0.0.1:1234

#cap = cv2.VideoCapture("udp://127.0.0.1:1234?overrun_nonfatal=1&fifo_size=500000", cv2.CAP_FFMPEG)
#save out
ffmpeg -i udp://127.0.0.1:1234 -acodec copy -vcodec copy d:/abc.mp4

# scp files
scp scambilight@scambilight.local:/home/scambilight/*.jpg .


libcamera-hello --list-cameras
#fish eye lens modes
0 : ov5647 [2592x1944] (/base/soc/i2c0mux/i2c@1/ov5647@36)
    Modes: 'SGBRG10_CSI2P' : 640x480 [58.92 fps - (16, 0)/2560x1920 crop]
                             1296x972 [43.25 fps - (0, 0)/2592x1944 crop]
                             1920x1080 [30.62 fps - (348, 434)/1928x1080 crop]
                             2592x1944 [15.63 fps - (0, 0)/2592x1944 crop]

#tv flange =26.20mm


new project:

empty directory

npm init -y (now should have package.json)
if typescript isnt global dependency - install it
check :
tsc --version
create root ts file

touch app.ts
tsc --init

conpile file: 
tsc app.ts